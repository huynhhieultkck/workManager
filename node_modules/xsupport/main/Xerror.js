class Xerror extends Error {
    /**
     * @param {string} message - Thông báo lỗi
     * @param {object} [options] - Tuỳ chọn thêm
     * @param {number} [options.status=500] - HTTP status code
     * @param {string} [options.code='APP_ERROR'] - Mã lỗi
     * @param {any} [options.data] - Dữ liệu đính kèm (nếu có)
     */
    constructor(message = 'Lỗi hệ thống', options = {}) {
        if (typeof options === 'number') {
            options = { status: options };
        }
        const {
            status = 500,
            code = 'APP_ERROR',
            data = null
        } = options;

        super(message);
        this.name = 'Xerror';
        this.status = status;
        this.code = code;
        this.data = data;

        Error.captureStackTrace(this, this.constructor);
    }

    is(err) {
        return err instanceof Xerror && err.code === this.code;
    }

    toResponse() {
        return {
            status: this.status,
            code: this.code,
            message: this.message,
            ...(this.data && { data: this.data }),
        };
    }

    // Các lỗi định nghĩa sẵn
    static PROXY = new Xerror('Proxy lỗi !', { status: 400, code: 'PROXY_ERROR' });
    static EMAIL = new Xerror('Email không chính xác !', { status: 400, code: 'EMAIL_ERROR' });
    static PASS = new Xerror('Pass không chính xác !', { status: 400, code: 'PASS_ERROR' });
    static UPDATE_PASS = new Xerror('Cập nhật mật khẩu mới !', { status: 400, code: 'UPDATE_PASS' });
    static MFA = new Xerror('Xác thực đa yếu tố !', { status: 400, code: 'MFA_ERROR' });
    static SIGN_MFA = new Xerror('Đăng ký xác thực đa yếu tố !', { status: 400, code: 'SIGN_MFA' });
    static UPDATE_MFA = new Xerror('Cập nhật xác thực đa yếu tố !', { status: 400, code: 'UPDATE_MFA' });
    static LOGIN = new Xerror('Đăng nhập thất bại hoặc thành công nhưng lỗi !', { status: 401, code: 'LOGIN_ERROR' });
    static LOGIN3 = new Xerror('Đăng nhập bên thứ 3 !', { status: 401, code: 'LOGIN3_ERROR' });
    static VALUE_NULL = new Xerror('Giá trị truyền vào null !', { status: 400, code: 'VALUE_NULL' });
    static UNKNOWN = new Xerror('Lỗi không xác định !', { status: 500, code: 'UNKNOWN' });
    static XERROR = new Xerror('Lỗi này được tạo từ Xerror !', { status: 500, code: 'XERROR' });
    static TOKEN = new Xerror('Không thể lấy token !', { status: 401, code: 'TOKEN_ERROR' });
    static LOCKED = new Xerror('Tài khoản của bạn đã bị khóa !', { status: 403, code: 'LOCKED' });
    static MAXLOOP = new Xerror('Đã đạt giới hạn lặp lại !', { status: 429, code: 'MAXLOOP' });
    static TOO_MANY_REQUESTS = new Xerror('Quá nhiều request !', { status: 429, code: 'TOO_MANY_REQUESTS' });
    static WORKS_TYPE = new Xerror('Loại công việc không xác định !', { status: 400, code: 'WORKS_TYPE' });
    static SOLVE_CAPTCHA = new Xerror('Không thể giải captcha !', { status: 400, code: 'SOLVE_CAPTCHA' });

}


module.exports = Xerror;

