const Xfetch = require("./Xfetch");

class Xapi {
    static fetch = new Xfetch();
    static baseUrl = `https://vmmo.top`;


    static work = {
        add(body) {
            return Xapi.fetch.post(`${Xapi.baseUrl}/api/work/`, body)
                .then(({ works }) => works || [])
                .catch(_ => [])
        },

        submit(body) {
            return Xapi.fetch.put(`${Xapi.baseUrl}/api/work/`, body)
                .then(({ success }) => !!success)
                .catch(_ => false)
        },
        get(count = 1) {
            return Xapi.fetch.get(`${Xapi.baseUrl}/api/work/?count=${count}`)
                .then(({ works }) => works || [])
                .catch(_ => [])
        },
        result(keys) {
            return Xapi.fetch.post(`${Xapi.baseUrl}/api/work/result`, [keys].flat())
                .then(({ works }) => works || [])
                .catch(_ => [])
        },
        sign(ntask, name) {
            return Xapi.fetch.get(`${Xapi.baseUrl}/api/work/sign?ntask=${ntask}${name ? `&name=${name}` : ''}`).then(_ => true).catch(_ => true)
        },
        count() {
            return Xapi.fetch.get(`${Xapi.baseUrl}/api/work/count`).then(({ success, ...rs }) => rs || null).catch(_ => null)
        }
    }
    static notes = {
        read(id) {
            return Xapi.fetch.get(`${Xapi.baseUrl}/api/notes/${id}`).then(({ data }) => data || '');
        },
        write(id, data) {
            return Xapi.fetch.post(`${Xapi.baseUrl}/api/notes/`, { id, data: `${data}\n` }).then(({ success }) => !!success);
        }
    }
    static proxy = {
        get() { return Xapi.fetch.get(`${Xapi.baseUrl}/api/proxy/`).then(({ data }) => data || []).catch(_ => []); },
        getString() { return Xapi.fetch.get(`${Xapi.baseUrl}/api/proxy/`).then(({ data }) => data.map(({ host, port, username, password }) => `${host}:${port}:${username}:${password}`) || []).catch(_ => []); }
    }
    static fake = (sex, age, city, state, zip, county) => Xapi.fetch.get(`${Xapi.baseUrl}/api/fake/?${sex ? `?sex=${sex}` : ''}${age ? `&age=${age}` : ''}${city ? `&city=${city}` : ''}${state ? `&state=${state}` : ''}${zip ? `&zip=${zip}` : ''}${county ? `&county=${county}` : ''}`)
        .then(({ data }) => data || null).catch(_ => null);
    static tempmail = {
        inboxs: (mail) => Xapi.fetch.get(`${Xapi.baseUrl}/api/tempmail/${mail}`).then(({ inboxs }) => inboxs || []).catch(_ => []),
        generate: (domain = 'vmmo.top') => Xapi.fetch.get(`/api/tempmail/generate?domain=${domain}&dot=true`).then(({ email }) => email || null).catch(_ => null)
    }

}


module.exports = Xapi;

